generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id          String               @id @default(uuid())
  displayName String
  legalName   String
  category    String
  profiles    CompaniesOnProfile[]
}

model Profile {
  id        String               @id @default(uuid())
  email     String
  phone     String
  residency String
  user      User                 @relation(fields: [userId], references: [id])
  userId    String               @unique
  companies CompaniesOnProfile[]
  expertise ExpertiseOnProfile[]
}

model CompaniesOnProfile {
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String
  company   Company @relation(fields: [companyId], references: [id])
  companyId String

  @@id([profileId, companyId])
}

model Expertise {
  id          String               @id @default(uuid())
  displayName String               @unique
  profiles    ExpertiseOnProfile[]
}

model ExpertiseOnProfile {
  profile     Profile   @relation(fields: [profileId], references: [id])
  profileId   String
  expertise   Expertise @relation(fields: [expertiseId], references: [id])
  expertiseId String

  @@id([profileId, expertiseId])
}

model User {
  id           String          @id @default(uuid())
  displayName  String
  email        String          @unique
  code         String
  password     String
  refreshToken String?
  profile      Profile?
  roles        RoleOnUser[]
  participant  Participation[]
}

model Role {
  id          String       @id @default(uuid())
  displayName String       @unique
  users       RoleOnUser[]
  events      Event[]
}

model RoleOnUser {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@id([userId, roleId])
}

model Event {
  id           String          @id @default(uuid())
  displayName  String
  description  String
  type         String
  startDate    DateTime
  endDate      DateTime?
  role         Role            @relation(fields: [roleId], references: [id])
  roleId       String
  participants Participation[]
}

model Participation {
  participant   User   @relation(fields: [participantId], references: [id])
  participantId String
  event         Event  @relation(fields: [eventId], references: [id])
  eventId       String

  @@id([participantId, eventId])
}
